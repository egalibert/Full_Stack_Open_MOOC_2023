{"ast":null,"code":"var _jsxFileName = \"/Users/elliotgalibert/code/Workspace/Full_Stack_Open/part1/unicafe/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const Header = props => /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: props.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 27\n  }, this);\n  const Button = _ref => {\n    let {\n      onClick,\n      text\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClick,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this);\n  };\n  const handleGoodClick = () => setClicks({\n    good: clicks.good + 1\n  });\n  const handleNeutralClick = () => setClicks({\n    neutral: clicks.neutral + 1\n  });\n  const handleBadClick = () => setClicks({\n    bad: clicks.bad + 1\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      name: \"Customer Feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"good\",\n      onClick: handleGoodClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"neutral\",\n      onClick: handleNeutralClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"bad\",\n      onClick: handleBadClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ReactDOM","jsxDEV","_jsxDEV","App","_s","good","setGood","neutral","setNeutral","bad","setBad","Header","props","children","name","fileName","_jsxFileName","lineNumber","columnNumber","Button","_ref","onClick","text","handleGoodClick","setClicks","clicks","handleNeutralClick","handleBadClick","_c","$RefreshReg$"],"sources":["/Users/elliotgalibert/code/Workspace/Full_Stack_Open/part1/unicafe/src/App.js"],"sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const Header = props => <h1>{props.name}</h1>\n\n  const Button = ({ onClick, text }) => (\n    <button onClick={onClick}>\n      {text}\n    </button>\n  )\n\n  const handleGoodClick = () =>\n  setClicks({ good: clicks.good + 1})\n\nconst handleNeutralClick = () =>\n  setClicks({ neutral: clicks.neutral + 1})\n\nconst handleBadClick = () =>\n  setClicks({ bad: clicks.bad + 1})\n\n  return (\n    <div>\n      <Header name=\"Customer Feedback\" />\n      <Button text=\"good\" onClick={handleGoodClick}/>\n      <Button text=\"neutral\" onClick={handleNeutralClick}/>\n      <Button text=\"bad\" onClick={handleBadClick} />\n    </div>\n  )\n}\n\nexport default App"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACU,GAAG,EAAEC,MAAM,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAEjC,MAAMY,MAAM,GAAGC,KAAK,iBAAIV,OAAA;IAAAW,QAAA,EAAKD,KAAK,CAACE;EAAI;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAE7C,MAAMC,MAAM,GAAGC,IAAA;IAAA,IAAC;MAAEC,OAAO;MAAEC;IAAK,CAAC,GAAAF,IAAA;IAAA,oBAC/BlB,OAAA;MAAQmB,OAAO,EAAEA,OAAQ;MAAAR,QAAA,EACtBS;IAAI;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA,CACV;EAED,MAAMK,eAAe,GAAGA,CAAA,KACxBC,SAAS,CAAC;IAAEnB,IAAI,EAAEoB,MAAM,CAACpB,IAAI,GAAG;EAAC,CAAC,CAAC;EAErC,MAAMqB,kBAAkB,GAAGA,CAAA,KACzBF,SAAS,CAAC;IAAEjB,OAAO,EAAEkB,MAAM,CAAClB,OAAO,GAAG;EAAC,CAAC,CAAC;EAE3C,MAAMoB,cAAc,GAAGA,CAAA,KACrBH,SAAS,CAAC;IAAEf,GAAG,EAAEgB,MAAM,CAAChB,GAAG,GAAG;EAAC,CAAC,CAAC;EAEjC,oBACEP,OAAA;IAAAW,QAAA,gBACEX,OAAA,CAACS,MAAM;MAACG,IAAI,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnChB,OAAA,CAACiB,MAAM;MAACG,IAAI,EAAC,MAAM;MAACD,OAAO,EAAEE;IAAgB;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC/ChB,OAAA,CAACiB,MAAM;MAACG,IAAI,EAAC,SAAS;MAACD,OAAO,EAAEK;IAAmB;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACrDhB,OAAA,CAACiB,MAAM;MAACG,IAAI,EAAC,KAAK;MAACD,OAAO,EAAEM;IAAe;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV,CAAC;AAAAd,EAAA,CA/BKD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAiCT,eAAeA,GAAG;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}