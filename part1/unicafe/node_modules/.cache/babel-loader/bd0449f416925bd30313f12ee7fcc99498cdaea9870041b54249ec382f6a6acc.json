{"ast":null,"code":"var _jsxFileName = \"/Users/elliotgalibert/code/Workspace/Full_Stack_Open/part1/unicafe/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\n// const Statistic = ({text, value}) => {\n//   if (text === \"positive\") {\n//     return (\n//       <tr><td>{text} {value} %</td></tr>\n//     )\n//   }\n\n//   return (\n//     <tr><td>{text} {value}</td></tr>\n//   )\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Statistics = _ref => {\n  let {\n    clicks\n  } = _ref;\n  const total = clicks[0] + clicks[1] + clicks[2];\n  const average = (clicks[0] - clicks[2]) / total;\n  const positive = clicks[0] / total * 100;\n  if (total === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No feedback given\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(Statistic, {\n          text: \"Good\",\n          value: clicks[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n          text: \"Neutral\",\n          value: clicks[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n          text: \"Bad\",\n          value: clicks[2]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n          text: \"all\",\n          value: total\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n          text: \"average\",\n          value: average\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n          text: \"positive\",\n          value: positive\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_c = Statistics;\nconst App = () => {\n  _s();\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const Header = props => /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: props.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 27\n  }, this);\n  const Button = _ref2 => {\n    let {\n      onClick,\n      text\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClick,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this);\n  };\n  const handleGoodClick = () => setGood(good + 1);\n  const handleNeutralClick = () => setNeutral(neutral + 1);\n  const handleBadClick = () => setBad(bad + 1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [console.log(good, bad, neutral), /*#__PURE__*/_jsxDEV(Header, {\n      name: \"Give Feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"Good\",\n      onClick: handleGoodClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"Neutral\",\n      onClick: handleNeutralClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"Bad\",\n      onClick: handleBadClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      name: \"Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      clicks: [good, neutral, bad]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Statistics\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","ReactDOM","jsxDEV","_jsxDEV","Statistics","_ref","clicks","total","average","positive","children","fileName","_jsxFileName","lineNumber","columnNumber","Statistic","text","value","_c","App","_s","good","setGood","neutral","setNeutral","bad","setBad","Header","props","name","Button","_ref2","onClick","handleGoodClick","handleNeutralClick","handleBadClick","console","log","_c2","$RefreshReg$"],"sources":["/Users/elliotgalibert/code/Workspace/Full_Stack_Open/part1/unicafe/src/App.js"],"sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\n// const Statistic = ({text, value}) => {\n//   if (text === \"positive\") {\n//     return (\n//       <tr><td>{text} {value} %</td></tr>\n//     )\n//   }\n\n//   return (\n//     <tr><td>{text} {value}</td></tr>\n//   )\n// }\n\nconst Statistics = ({clicks}) => {\n  const total = clicks[0] + clicks[1] + clicks[2]\n  const average = (clicks[0] - clicks[2]) / total\n  const positive = (clicks[0] / total) * 100\n  \n  if (total === 0) {\n    return (\n      <div>\n        No feedback given\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <table>\n        <tbody>\n          <Statistic text=\"Good\" value={clicks[0]} />\n          <Statistic text=\"Neutral\" value={clicks[1]} />\n          <Statistic text=\"Bad\" value={clicks[2]} />\n          <Statistic text=\"all\" value={total} />\n          <Statistic text=\"average\" value={average} />\n          <Statistic text=\"positive\" value={positive} />\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nconst App = () => \n{\n\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const Header = props => <h1>{props.name}</h1>\n\n  const Button = ({ onClick, text }) => (\n    <button onClick={onClick}>\n      {text}\n    </button>\n  )\n\nconst handleGoodClick = () => setGood(good + 1)\n\nconst handleNeutralClick = () => setNeutral(neutral + 1)\n\nconst handleBadClick = () => setBad(bad + 1)\n\n  return (\n    <div>\n      {console.log(good, bad, neutral)}\n      <Header name=\"Give Feedback\" />\n      <Button text=\"Good\" onClick={handleGoodClick}/>\n      <Button text=\"Neutral\" onClick={handleNeutralClick}/>\n      <Button text=\"Bad\" onClick={handleBadClick} />\n      <Header name=\"Statistics\" />\n      <Statistics clicks={[good, neutral, bad]} />\n    </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}