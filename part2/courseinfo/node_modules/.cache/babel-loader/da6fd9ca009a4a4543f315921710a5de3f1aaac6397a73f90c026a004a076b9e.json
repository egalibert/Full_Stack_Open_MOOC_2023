{"ast":null,"code":"var _jsxFileName = \"/Users/elliotgalibert/code/Workspace/Full_Stack_Open/part2/courseinfo/src/App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  const course = {\n    name: 'Half Stack application development',\n    parts: [{\n      name: 'Fundamentals of React',\n      exercises: 10\n    }, {\n      name: 'Using props to pass data',\n      exercises: 7\n    }, {\n      name: 'State of a component',\n      exercises: 14\n    }]\n  };\n  const Course = _ref => {\n    let {\n      courses\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: courses.map(course => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          course: course.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Content, {\n          parts: course.parts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Total, {\n          parts: course.parts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }, this)]\n      }, course.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 3\n    }, this);\n  };\n  const Part = props => {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [props.kurssi, \" \", props.ex]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  };\n  const Header = props => {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: course.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  };\n  const Content = props => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Part, {\n        kurssi: course.parts[0].name,\n        ex: course.parts[0].exercises\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Part, {\n        kurssi: course.parts[1].name,\n        ex: course.parts[1].exercises\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Part, {\n        kurssi: course.parts[2].name,\n        ex: course.parts[2].exercises\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  };\n  const Total = props => {\n    const total = parts.reduce((sum, part) => sum + part.exercises, 0);\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Number of exercises \", total]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      course: course\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      parts: Part\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Total, {\n      parts: Part\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_c = App;\nexport default App;\n\n// const App = () => {\n//   const course = {\n//     id: 1,\n//     name: 'Half Stack application development',\n//     parts: [\n//       {\n//         name: 'Fundamentals of React',\n//         exercises: 10,\n//         id: 1\n//       },\n//       {\n//         name: 'Using props to pass data',\n//         exercises: 7,\n//         id: 2\n//       },\n//       {\n//         name: 'State of a component',\n//         exercises: 14,\n//         id: 3\n//       }\n//     ]\n//   }\n\n//   const Course = (course) =>\n//   <div>\n//     {course.map(course =>\n//       <div key={course.id}>\n//         <Header course={course.name} />\n//         <Content parts={course.parts}/>\n//         <Total parts={course.parts}/>\n//       </div>\n//     )}\n//   </div>\n\n//   const Header = (props) => {\n//     return(\n//       <h1>{course.name}</h1>\n//     )\n//   }\n//   const Content = (props) => {\n//     return(\n//       <div>\n//       <Part kurssi={course.parts[0].name} ex={course.parts[0].exercises}/>\n//       <Part kurssi={course.parts[1].name} ex={course.parts[1].exercises}/>\n//       <Part kurssi={course.parts[2].name} ex={course.parts[2].exercises}/>\n//       </div>\n//     )\n//   }\n\n//   const Part = (props) => {\n//     return (\n//       <p>\n//         {props.kurssi} {props.ex}\n//       </p>\n//     )\n//   }\n\n//   const Total = (props) => {\n//     return(\n//       <p>number of exercises {course.parts[0].exercises + course.parts[1].exercises + course.parts[2].exercises}</p>\n//     )\n//   }\n\n//   return (\n//       <Course course={course} />\n//   )\n// }\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["App","course","name","parts","exercises","Course","_ref","courses","_jsxDEV","children","map","Header","fileName","_jsxFileName","lineNumber","columnNumber","Content","Total","id","Part","props","kurssi","ex","total","reduce","sum","part","_c","$RefreshReg$"],"sources":["/Users/elliotgalibert/code/Workspace/Full_Stack_Open/part2/courseinfo/src/App.js"],"sourcesContent":["const App = () => {\n  const course = {\n    name: 'Half Stack application development',\n    parts: [\n      {\n        name: 'Fundamentals of React',\n        exercises: 10\n      },\n      {\n        name: 'Using props to pass data',\n        exercises: 7\n      },\n      {\n        name: 'State of a component',\n        exercises: 14\n      }\n    ]\n  }\n\n  const Course = ({courses}) =>\n  <div>\n    {courses.map(course =>\n      <div key={course.id}>\n        <Header course={course.name} />\n        <Content parts={course.parts}/>\n        <Total parts={course.parts}/>\n      </div>\n    )}\n  </div>\n\n  const Part = (props) => {\n    return (\n      <p>\n        {props.kurssi} {props.ex}\n      </p>\n    )\n  }\n\n  const Header = (props) => {\n    return(\n      <h1>{course.name}</h1>\n    )\n  }\n  const Content = (props) => {\n    return(\n      <div>\n      <Part kurssi={course.parts[0].name} ex={course.parts[0].exercises}/>\n      <Part kurssi={course.parts[1].name} ex={course.parts[1].exercises}/>\n      <Part kurssi={course.parts[2].name} ex={course.parts[2].exercises}/>\n      </div>\n    )\n  }\n  const Total = (props) => {\n    const total = parts.reduce((sum, part) => sum + part.exercises, 0)\n\n    return (\n      <p>Number of exercises {total}</p>\n    )\n  }\n  return (\n    <div>\n      <Header course={course} />\n      <Content parts={Part} />\n      <Total parts={Part} />\n    </div>\n  )\n}\n\nexport default App\n\n// const App = () => {\n//   const course = {\n//     id: 1,\n//     name: 'Half Stack application development',\n//     parts: [\n//       {\n//         name: 'Fundamentals of React',\n//         exercises: 10,\n//         id: 1\n//       },\n//       {\n//         name: 'Using props to pass data',\n//         exercises: 7,\n//         id: 2\n//       },\n//       {\n//         name: 'State of a component',\n//         exercises: 14,\n//         id: 3\n//       }\n//     ]\n//   }\n\n//   const Course = (course) =>\n//   <div>\n//     {course.map(course =>\n//       <div key={course.id}>\n//         <Header course={course.name} />\n//         <Content parts={course.parts}/>\n//         <Total parts={course.parts}/>\n//       </div>\n//     )}\n//   </div>\n\n//   const Header = (props) => {\n//     return(\n//       <h1>{course.name}</h1>\n//     )\n//   }\n//   const Content = (props) => {\n//     return(\n//       <div>\n//       <Part kurssi={course.parts[0].name} ex={course.parts[0].exercises}/>\n//       <Part kurssi={course.parts[1].name} ex={course.parts[1].exercises}/>\n//       <Part kurssi={course.parts[2].name} ex={course.parts[2].exercises}/>\n//       </div>\n//     )\n//   }\n\n//   const Part = (props) => {\n//     return (\n//       <p>\n//         {props.kurssi} {props.ex}\n//       </p>\n//     )\n//   }\n  \n//   const Total = (props) => {\n//     return(\n//       <p>number of exercises {course.parts[0].exercises + course.parts[1].exercises + course.parts[2].exercises}</p>\n//     )\n//   }\n\n//   return (\n//       <Course course={course} />\n//   )\n// }\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}